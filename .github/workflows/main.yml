name: VerusDesktopCI

on: 
  pull_request:
    types: [opened, reopened]
  push:
    branches-ignore:
      - master
    paths-ignore:
      - ./README.md
    tags-ignore:
      - '*.noci'

jobs:
  job-linux-gui-build:
    name: Build GUI (Linux)
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-node@v1
      with:
        node-version: '12'
        check-latest: true

    - name: Install Yarn
      run: npm install -g yarn

    - name: Fetch and build GUI
      run: |
        cd gui
        git clone https://github.com/pbca26/Verus-Desktop-GUI -b dev
        cd Verus-Desktop-GUI/react
        yarn install --network-timeout 1000000
        yarn run build
        tar -czvf gui.tar.gz build
        mv gui.tar.gz ../../../

    - name: Upload gui.tar.gz as artifact
      uses: actions/upload-artifact@v1
      with:
        name: gui
        path: ./gui.tar.gz

  job-macos-build:
    name: Build (MacOS)
    runs-on: macos-latest
    needs: job-linux-gui-build

    steps:
    - uses: actions/checkout@v1
    - name: Download pre-built GUI
      uses: actions/download-artifact@v1
      with:
        name: gui
    - uses: actions/setup-node@v1
      with:
        node-version: '12'
        check-latest: true

    - name: Fetch NSPV binaries
      run: |
        ./fetch-nspv-bins.sh

    - name: Install deps
      run: npm install

    - name: Install Electron build tools
      run: npm install -g electron-builder

    - name: Unpack GUI
      run: |
        cd gui
        git clone https://github.com/pbca26/Verus-Desktop-GUI -b dev
        cd ../
        mv gui/gui.tar.gz gui/Verus-Desktop-GUI/react
        cd gui/Verus-Desktop-GUI/react
        tar xzvf gui.tar.gz
        cd ../../../

    - name: Build
      run: |
        npm run dist
        tar -czvf verus-desktop-osx.tar.gz dist

    - name: Upload verus-desktop-osx.tar.gz as artifact
      uses: actions/upload-artifact@v1
      with:
        name: verus-desktop-osx
        path: ./verus-desktop-osx.tar.gz

  job-linux-build:
    name: Build (Linux)
    runs-on: ubuntu-latest
    needs: job-linux-gui-build

    steps:
    - uses: actions/checkout@v1
    - name: Download pre-built GUI
      uses: actions/download-artifact@v1
      with:
        name: gui
    - uses: actions/setup-node@v1
      with:
        node-version: '12'
        check-latest: true

    - name: Fetch NSPV binaries
      run: |
        ./fetch-nspv-bins.sh

    - name: Install deps
      run: npm install

    - name: Install Electron build tools
      run: npm install -g electron-builder

    - name: Unpack GUI
      run: |
        cd gui
        git clone https://github.com/pbca26/Verus-Desktop-GUI -b dev
        cd ../
        mv gui/gui.tar.gz gui/Verus-Desktop-GUI/react
        cd gui/Verus-Desktop-GUI/react
        tar xzvf gui.tar.gz
        cd ../../../

    - name: Build
      run: |
        npm run dist
        tar -czvf verus-desktop-linux.tar.gz dist

    - name: Upload verus-desktop-linux.tar.gz as artifact
      uses: actions/upload-artifact@v1
      with:
        name: verus-desktop-linux
        path: ./verus-desktop-linux.tar.gz

  job-win-build:
    name: Build (Windows)
    runs-on: windows-latest
    needs: job-linux-gui-build

    steps:
    - uses: actions/checkout@v1
    - name: Download pre-built GUI
      uses: actions/download-artifact@v1
      with:
        name: gui
    - uses: actions/setup-node@v1
      with:
        node-version: '12'
        check-latest: true

    - name: Fetch NSPV binaries
      run: |
        mkdir assets/bin/win64
        cd assets/bin/win64
        curl -L -o nspv-win.tar https://github.com/pbca26/libnspv/releases/download/v0.3/nspv-win.tar
        dir
        tar xzvf nspv-win.tar
        del nspv-win.tar
        cd ../../../

    - name: Install deps
      run: npm install

    - name: Install Electron build tools
      run: npm install -g electron-builder

    - name: Unpack GUI
      run: |
        cd gui
        git clone https://github.com/pbca26/Verus-Desktop-GUI -b dev
        cd ../
        mv gui/gui.tar.gz gui/Verus-Desktop-GUI/react
        cd gui/Verus-Desktop-GUI/react
        tar xzvf gui.tar.gz
        cd ../../../

    - name: Build
      run: |
        npm run dist-win
        tar -czvf verus-desktop-win.tar.gz dist

    - name: Upload verus-desktop-win.tar.gz as artifact
      uses: actions/upload-artifact@v1
      with:
        name: verus-desktop-win
        path: ./verus-desktop-win.tar.gz

  job-release:
    name: Release
    runs-on: ubuntu-latest
    needs: [job-macos-build, job-linux-build, job-win-build]

    steps:
      - name: Download Artifacts (Linux)
        uses: actions/download-artifact@v1
        with:
          name: verus-desktop-linux
      - name: Download Artifacts (Win)
        uses: actions/download-artifact@v1
        with:
          name: verus-desktop-win
      - name: Download Artifacts (MacOS)
        uses: actions/download-artifact@v1
        with:
          name: verus-desktop-macos
      - name: Prepare Archives
        run: |
          mv verus-desktop-linux/verus-desktop-linux.tar.gz .
          mv verus-desktop-win/verus-desktop-win.tar.gz .
          mv verus-desktop-osx/verus-desktop-osx.tar.gz .

      - name: Generate build number  # gen ${{ steps.buildnumber.outputs.build_number }} for release name
        id: buildnumber
        uses: einaregilsson/build-number@v1 
        with:
          token: ${{secrets.github_token}}        

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.buildnumber.outputs.build_number }}
          release_name: Build - ${{ github.sha }}
          draft: false
          prerelease: true

      - name: Upload Release Asset (Linux)
        id: upload-release-asset-linux
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./verus-desktop-linux.tar.gz
          asset_name: verus-desktop-linux.tar.gz
          asset_content_type: application/tar+gzip

      - name: Upload Release Asset (Win)
        id: upload-release-asset-win 
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./verus-desktop-win.zip
          asset_name: verus-desktop-win.zip
          asset_content_type: application/zip

      - name: Upload Release Asset (MacOS)
        id: upload-release-asset-macos 
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./verus-desktop-osx.gz
          asset_name: verus-desktop-osx.tar.gz
          asset_content_type: application/tar+gzip
